# frozen_string_literal: true

# Vagrant CAN NOT cohabitate well with bundler,
# this bootstrap DOES NOT load any project sources.
# This file is used as a kind of template.
# ``boxes`` variable is defined at runtime.
#
# @see SwagDev::Project::Tools::Vagrant

# synced folders -----------------------------------------------------
synced_folder_config = lambda do |config, box_config|
  return unless box_config['synced_folder']

  config.vm.public_send(:synced_folder,
                        *(box_config['synced_folder'][0] || []),
                        **(box_config['synced_folder'][1] || {}))
end

# providers config ---------------------------------------------------
providers_config = lambda do |config, providers|
  (providers || {}).each do |provider, provider_config|
    config.vm.provider provider do |vb|
      provider_config.each do |pc_type, pconfigs|
        next unless ['vm', 'customize'].include?(pc_type)

        pconfigs.each do |c|
          c = ['customize', [c], {}] if pc_type == 'customize'

          { customize: vb, vm: config.vm }
            .fetch(pc_type.to_sym)
            .public_send(c[0], *(c[1]), **(c[2] || {}))
        end
      end
    end
  end
end

# machine config -----------------------------------------------------
machine_config = lambda do |config, name, box_config, &block|
  config.vm.define name, autostart: false do |machine|
    machine.vm.box = box_config.fetch('image')

    block&.call(machine)
  end
end

# machine provisions -------------------------------------------------
machine_provisions_config = lambda do |machine, provisions|
  (provisions || {}).each do |provision|
    provision[0] = [provision[0]] unless provision[0].is_a?(Array)

    machine.vm.public_send(:provision, *(provision[0]), **(provision[1]))
  end
end

# machine vm config -------------------------------------------------
machine_vm_config = lambda do |machine, box_config|
  box_config.each do |k, v|
    next unless ['provision', 'guest'].include?(k)

    if v.is_a?(Array)
      machine.vm.public_send(k, *(v[0]), **(v[1]))
    else # settings
      machine.vm.public_send("#{k}=", v)
    end
  end
end

# configure ----------------------------------------------------------
Vagrant.configure(2) do |config|
  boxes.each do |box, box_config|
    synced_folder_config.call(config, box_config)
    providers_config.call(config, box_config['providers'])

    machine_config.call(config, box, box_config) do |machine|
      machine_provisions_config.call(machine, box_config['provisions'])
      machine_vm_config.call(machine, box_config)
    end
  end
end
